import os
import shutil
import requests
import zipfile
from glob import glob
import yaml
from sklearn.model_selection import train_test_split

# Set working directory
print("Current directory:", os.getcwd())
os.chdir('/content')

# Google Colab connection
from google.colab import drive
drive.mount("/content/gdrive")

# Set working directory
os.chdir("/content/gdrive/MyDrive")
project_folder = "yolov8_projects/testingcars"

# Create project folder if it doesn't exist
if not os.path.exists(project_folder):
    os.makedirs(project_folder)
os.chdir(project_folder)

# Install necessary packages for YOLOv8 and dependencies
!pip install ultralytics
!pip install flask-ngrok flask deep_sort_realtime opencv-python-headless pafy youtube-dl cython pyngrok

from pyngrok import ngrok

# Check RAM capacity
from psutil import virtual_memory
ram_gb = virtual_memory().total / 1e9
print('Your runtime has {:.1f} gigabytes of available RAM\n'.format(ram_gb))

if ram_gb < 20:
    print('Not using a high-RAM runtime')
else:
    print('You are using a high-RAM runtime!')

## Training YOLOv8 on a large dataset for 100+ epochs ----------------------------------

# YOLOv8 라이브러리 설치
!pip install ultralytics

# 데이터셋 경로 설정
dataset_dir = '/content/gdrive/MyDrive/yolov8_projects/testingcars/dataset'

# data.yaml 파일 경로 설정
data_yaml_path = os.path.join(dataset_dir, 'data.yaml')

# data.yaml 파일 절대 경로로 업데이트
with open(data_yaml_path, 'r') as f:
    data = yaml.load(f, Loader=yaml.FullLoader)

data['train'] = os.path.join(dataset_dir, 'train/images')
data['val'] = os.path.join(dataset_dir, 'valid/images')
data['test'] = os.path.join(dataset_dir, 'test/images')  # optional, if you have a test set

with open(data_yaml_path, 'w') as f:
    yaml.dump(data, f)

# 이전 학습의 best.pt 파일 경로 설정
best_weights_path = '/content/gdrive/MyDrive/yolov8_projects/testingcars/runs/detect/yolov8x_custom7/weights/best.pt'

# YOLOv8 모델을 로드하고 기존 best.pt 가중치로 학습 재개
!yolo task=detect mode=train model={best_weights_path} data={data_yaml_path} epochs=409 imgsz=832 batch=12 name=yolov8x_custom

# TensorBoard로 훈련 과정 확인
%load_ext tensorboard
%tensorboard --logdir runs/
